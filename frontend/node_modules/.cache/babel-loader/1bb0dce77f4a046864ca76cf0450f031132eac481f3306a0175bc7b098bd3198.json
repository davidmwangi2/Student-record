{"ast":null,"code":"var _jsxFileName = \"/home/ezra/Downloads/student-record-system-final/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport StudentForm from './components/StudentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COURSES = ['Mathematics', 'Physics', 'Computer Science', 'Chemistry', 'Biology', 'History', 'Economics', 'Philosophy', 'Engineering', 'Art'];\nfunction App() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  async function fetchStudents() {\n    try {\n      const res = await fetch('http://127.0.0.1:5000/students');\n      if (!res.ok) throw new Error('Network response not ok');\n      const data = await res.json();\n      setStudents(data);\n    } catch (err) {\n      console.error('Fetch students failed', err);\n      setMessage({\n        type: 'error',\n        text: 'Unable to load students. Backend may be down.'\n      });\n    }\n  }\n  async function addStudent(student) {\n    try {\n      const res = await fetch('http://127.0.0.1:5000/students', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(student)\n      });\n      const body = await res.json();\n      if (!res.ok) {\n        setMessage({\n          type: 'error',\n          text: body.error || 'Failed to add'\n        });\n        return;\n      }\n      setStudents(prev => [...prev, body]);\n      setMessage({\n        type: 'success',\n        text: 'Student added!'\n      });\n      setTimeout(() => setMessage(null), 2000);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: 'error',\n        text: 'Network error while adding student'\n      });\n    }\n  }\n  async function deleteStudent(id) {\n    if (!window.confirm('Delete this student?')) return;\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) {\n        setMessage({\n          type: 'error',\n          text: 'Failed to delete'\n        });\n        return;\n      }\n      setStudents(prev => prev.filter(s => s.id !== id));\n      setMessage({\n        type: 'success',\n        text: 'Student deleted'\n      });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: 'error',\n        text: 'Network error while deleting'\n      });\n    }\n  }\n  async function editStudent(id, name, course) {\n    try {\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          course\n        })\n      });\n      const body = await res.json();\n      if (!res.ok) {\n        setMessage({\n          type: 'error',\n          text: body.error || 'Failed to update'\n        });\n        return;\n      }\n      setStudents(prev => prev.map(s => s.id === id ? body : s));\n      setMessage({\n        type: 'success',\n        text: 'Student updated!'\n      });\n      setTimeout(() => setMessage(null), 1500);\n    } catch (err) {\n      console.error(err);\n      setMessage({\n        type: 'error',\n        text: 'Network error while updating student'\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDF93 Student Record System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type === 'success' ? 'success' : 'error'}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(StudentForm, {\n        courses: COURSES,\n        onAdd: addStudent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: students.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: s.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: s.course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => {\n              const newName = prompt('New name', s.name);\n              const newCourse = prompt('New course', s.course);\n              if (newName && newCourse) {\n                editStudent(s.id, newName, newCourse);\n              }\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => deleteStudent(s.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, s.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gNJC+Bnzst0TkRNajGZ+Imn3VOE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","StudentForm","jsxDEV","_jsxDEV","COURSES","App","_s","students","setStudents","message","setMessage","fetchStudents","res","fetch","ok","Error","data","json","err","console","error","type","text","addStudent","student","method","headers","body","JSON","stringify","prev","setTimeout","deleteStudent","id","window","confirm","filter","s","editStudent","name","course","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","courses","onAdd","onClick","newName","prompt","newCourse","_c","$RefreshReg$"],"sources":["/home/ezra/Downloads/student-record-system-final/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport StudentForm from './components/StudentForm';\n\nconst COURSES = [\n  'Mathematics','Physics','Computer Science','Chemistry','Biology',\n  'History','Economics','Philosophy','Engineering','Art'\n];\n\nfunction App(){\n  const [students, setStudents] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  useEffect(()=>{ fetchStudents() }, []);\n\n  async function fetchStudents(){\n    try{\n      const res = await fetch('http://127.0.0.1:5000/students');\n      if(!res.ok) throw new Error('Network response not ok');\n      const data = await res.json();\n      setStudents(data);\n    }catch(err){\n      console.error('Fetch students failed', err);\n      setMessage({type:'error', text:'Unable to load students. Backend may be down.'});\n    }\n  }\n\n  async function addStudent(student){\n    try{\n      const res = await fetch('http://127.0.0.1:5000/students', {\n        method:'POST',\n        headers:{'Content-Type':'application/json'},\n        body: JSON.stringify(student)\n      });\n      const body = await res.json();\n      if(!res.ok){ setMessage({type:'error', text: body.error || 'Failed to add'}); return; }\n      setStudents(prev => [...prev, body]);\n      setMessage({type:'success', text:'Student added!'});\n      setTimeout(()=>setMessage(null),2000);\n    }catch(err){\n      console.error(err);\n      setMessage({type:'error', text:'Network error while adding student'});\n    }\n  }\n\n  async function deleteStudent(id){\n    if(!window.confirm('Delete this student?')) return;\n    try{\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, { method:'DELETE'});\n      if(!res.ok){ setMessage({type:'error', text:'Failed to delete'}); return; }\n      setStudents(prev => prev.filter(s=>s.id!==id));\n      setMessage({type:'success', text:'Student deleted'});\n      setTimeout(()=>setMessage(null),1500);\n    }catch(err){\n      console.error(err);\n      setMessage({type:'error', text:'Network error while deleting'});\n    }\n  }\n\n  async function editStudent(id, name, course){\n    try{\n      const res = await fetch(`http://127.0.0.1:5000/students/${id}`, {\n        method:'PUT',\n        headers:{'Content-Type':'application/json'},\n        body: JSON.stringify({name, course})\n      });\n      const body = await res.json();\n      if(!res.ok){ setMessage({type:'error', text: body.error || 'Failed to update'}); return; }\n      setStudents(prev => prev.map(s=>s.id===id ? body : s));\n      setMessage({type:'success', text:'Student updated!'});\n      setTimeout(()=>setMessage(null),1500);\n    }catch(err){\n      console.error(err);\n      setMessage({type:'error', text:'Network error while updating student'});\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>🎓 Student Record System</h1>\n      {message && <div className={`message ${message.type==='success'?'success':'error'}`}>{message.text}</div>}\n      <div className=\"controls\">\n        <StudentForm courses={COURSES} onAdd={addStudent} />\n      </div>\n      <div className=\"grid\">\n        {students.map(s=> (\n          <div className=\"card\" key={s.id}>\n            <h3>{s.name}</h3>\n            <p>{s.course}</p>\n            <div className=\"actions\">\n              <button className=\"edit\" onClick={()=>{\n                const newName = prompt('New name', s.name);\n                const newCourse = prompt('New course', s.course);\n                if(newName && newCourse){\n                  editStudent(s.id, newName, newCourse);\n                }\n              }}>Edit</button>\n              <button className=\"delete\" onClick={()=>deleteStudent(s.id)}>Delete</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}